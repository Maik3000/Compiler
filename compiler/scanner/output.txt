Token: CLASS, Value: class
Token: PROGRAM_ID, Value: Program
Token: LCURLY, Value: {
Token: BOOLEAN, Value: boolean
Token: ID, Value: entrada
Token: SEMI, Value: ;
Token: INT, Value: int
Token: ID, Value: numeros
Token: SEMI, Value: ;
Token: INT, Value: int
Token: ID, Value: suma
Token: LPAREN, Value: (
Token: INT, Value: int
Token: ID, Value: valor1
Token: COMMA, Value: ,
Token: INT, Value: int
Token: ID, Value: valor2
Token: RPAREN, Value: )
Token: LCURLY, Value: {
Token: INT, Value: int
Token: ID, Value: res
Token: SEMI, Value: ;
Token: ID, Value: res
Token: ASSIGN, Value: =
Token: ID, Value: valor1
Token: PLUS, Value: +
Token: ID, Value: valor2
Token: SEMI, Value: ;
Token: RETURN, Value: return
Token: ID, Value: res
Token: SEMI, Value: ;
Token: RCURLY, Value: }
Token: VOID, Value: void
Token: ID, Value: main
Token: LPAREN, Value: (
Token: RPAREN, Value: )
Token: LCURLY, Value: {
Token: INT, Value: int
Token: ID, Value: resultado1
Token: COMMA, Value: ,
Token: ID, Value: resultado2
Token: SEMI, Value: ;
Token: BOOLEAN, Value: boolean
Token: ID, Value: resultado3
Token: SEMI, Value: ;
Token: ID, Value: entrada
Token: ASSIGN, Value: =
Token: TRUE, Value: true
Token: SEMI, Value: ;
Token: IF, Value: if
Token: LPAREN, Value: (
Token: ID, Value: entrada
Token: EQ, Value: ==
Token: TRUE, Value: true
Token: RPAREN, Value: )
Token: LCURLY, Value: {
Token: ID, Value: resultado1
Token: ASSIGN, Value: =
Token: ID, Value: suma
Token: LPAREN, Value: (
Token: INT_LITERAL, Value: 3
Token: COMMA, Value: ,
Token: INT_LITERAL, Value: 2
Token: RPAREN, Value: )
Token: SEMI, Value: ;
Token: RCURLY, Value: }
Token: ID, Value: entrada
Token: ASSIGN, Value: =
Token: FALSE, Value: false
Token: SEMI, Value: ;
Token: IF, Value: if
Token: LPAREN, Value: (
Token: ID, Value: entrada
Token: EQ, Value: ==
Token: TRUE, Value: true
Token: RPAREN, Value: )
Token: LCURLY, Value: {
Token: ID, Value: resultado1
Token: ASSIGN, Value: =
Token: ID, Value: resta
Token: LPAREN, Value: (
Token: INT_LITERAL, Value: 3
Token: COMMA, Value: ,
Token: INT_LITERAL, Value: 2
Token: RPAREN, Value: )
Token: SEMI, Value: ;
Token: RCURLY, Value: }
Token: RCURLY, Value: }
Token: RCURLY, Value: }
