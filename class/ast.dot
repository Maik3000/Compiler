digraph AST {
    node [shape=box, fontname="Arial"];
    edge [fontname="Arial"];
    rankdir=TB;
    node1 [label="Program\nProgram"];
    node1 -> node2;
    node2 [label="MultiVarDecl"];
    node2 -> node3;
    node3 [label="VarDecl\nentrada: BooleanType"];
    node1 -> node4;
    node4 [label="MultiVarDecl"];
    node4 -> node5;
    node5 [label="VarDecl\nnumeros: IntType"];
    node1 -> node6;
    node6 [label="MethodDecl\nsuma\nIntType"];
    node6 -> node7;
    node7 [label="Param\nvalor1: IntType"];
    node6 -> node8;
    node8 [label="Param\nvalor2: IntType"];
    node6 -> node9;
    node9 [label="Block"];
    node9 -> node10;
    node10 [label="VarDecl\nres: IntType"];
    node9 -> node11;
    node11 [label="AssignStmt\n="];
    node11 -> node12;
    node11 -> node13;
    node12 [label="VarLocation\nres"];
    node13 [label="BinaryExpr\n+"];
    node13 -> node14;
    node13 -> node15;
    node14 [label="VarLocation\nvalor1"];
    node15 [label="VarLocation\nvalor2"];
    node9 -> node16;
    node16 [label="ReturnStmt"];
    node16 -> node17;
    node17 [label="VarLocation\nres"];
    node1 -> node18;
    node18 [label="MethodDecl\nmain\nVoidType"];
    node18 -> node19;
    node19 [label="Block"];
    node19 -> node20;
    node20 [label="VarDecl\nresultado1: IntType"];
    node19 -> node21;
    node21 [label="VarDecl\nresultado2: IntType"];
    node19 -> node22;
    node22 [label="VarDecl\nresultado3: BooleanType"];
    node19 -> node23;
    node23 [label="AssignStmt\n="];
    node23 -> node24;
    node23 -> node25;
    node24 [label="VarLocation\nentrada"];
    node25 [label="BoolLiteral\ntrue"];
    node19 -> node26;
    node26 [label="IfStmt"];
    node26 -> node27;
    node27 [label="BinaryExpr\n=="];
    node27 -> node28;
    node27 -> node29;
    node28 [label="VarLocation\nentrada"];
    node29 [label="BoolLiteral\ntrue"];
    node26 -> node30;
    node30 [label="Block"];
    node30 -> node31;
    node31 [label="AssignStmt\n="];
    node31 -> node32;
    node31 -> node33;
    node32 [label="VarLocation\nresultado1"];
    node33 [label="MethodCall\nsuma"];
    node33 -> node34;
    node34 [label="IntLiteral\n3"];
    node33 -> node35;
    node35 [label="IntLiteral\n2"];
    node19 -> node36;
    node36 [label="AssignStmt\n="];
    node36 -> node37;
    node36 -> node38;
    node37 [label="VarLocation\nentrada"];
    node38 [label="BoolLiteral\nfalse"];
    node19 -> node39;
    node39 [label="IfStmt"];
    node39 -> node40;
    node40 [label="BinaryExpr\n=="];
    node40 -> node41;
    node40 -> node42;
    node41 [label="VarLocation\nentrada"];
    node42 [label="BoolLiteral\ntrue"];
    node39 -> node43;
    node43 [label="Block"];
    node43 -> node44;
    node44 [label="AssignStmt\n="];
    node44 -> node45;
    node44 -> node46;
    node45 [label="VarLocation\nresultado1"];
    node46 [label="MethodCall\nresta"];
    node46 -> node47;
    node47 [label="IntLiteral\n3"];
    node46 -> node48;
    node48 [label="IntLiteral\n2"];
}
